--Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
--Н_ТИПЫ_ВЕДОМОСТЕЙ, Н_ВЕДОМОСТИ.
--Вывести атрибуты: Н_ТИПЫ_ВЕДОМОСТЕЙ.НАИМЕНОВАНИЕ, Н_ВЕДОМОСТИ.ДАТА.
--Фильтры (AND):
--a) Н_ТИПЫ_ВЕДОМОСТЕЙ.НАИМЕНОВАНИЕ = Экзаменационный лист.
--b) Н_ВЕДОМОСТИ.ИД < 39921.
--Вид соединения: INNER JOIN.

SELECT
	"Н_ТИПЫ_ВЕДОМОСТЕЙ"."НАИМЕНОВАНИЕ",
	"Н_ВЕДОМОСТИ"."ДАТА"
FROM
	"Н_ТИПЫ_ВЕДОМОСТЕЙ"
INNER JOIN "Н_ВЕДОМОСТИ" ON
	"Н_ТИПЫ_ВЕДОМОСТЕЙ"."ИД" = "Н_ВЕДОМОСТИ"."ТВ_ИД"
WHERE
	("Н_ТИПЫ_ВЕДОМОСТЕЙ"."НАИМЕНОВАНИЕ" = 'Экзаменационный лист')
	AND ("Н_ВЕДОМОСТИ"."ИД" < 39921);

-----------------------------------------------------------------------------------------------

--Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
--Таблицы: Н_ЛЮДИ, Н_ОБУЧЕНИЯ, Н_УЧЕНИКИ.
--Вывести атрибуты: Н_ЛЮДИ.ИД, Н_ОБУЧЕНИЯ.ЧЛВК_ИД, Н_УЧЕНИКИ.НАЧАЛО.
--Фильтры: (AND)
--a) Н_ЛЮДИ.ИД < 100865.
--b) Н_ОБУЧЕНИЯ.ЧЛВК_ИД = 163484.
--c) Н_УЧЕНИКИ.НАЧАЛО > 1996-09-01.
--Вид соединения: INNER JOIN.

SELECT
	Н_ЛЮДИ."ИД",
	Н_ОБУЧЕНИЯ."ЧЛВК_ИД",
	Н_УЧЕНИКИ."НАЧАЛО"
FROM
	Н_ЛЮДИ
JOIN Н_ОБУЧЕНИЯ ON
	Н_ЛЮДИ."ИД" = Н_ОБУЧЕНИЯ."ЧЛВК_ИД"
JOIN "Н_УЧЕНИКИ" ON
	Н_УЧЕНИКИ."ЧЛВК_ИД" = Н_ОБУЧЕНИЯ."ЧЛВК_ИД"
	AND Н_УЧЕНИКИ."ВИД_ОБУЧ_ИД" = Н_ОБУЧЕНИЯ."ВИД_ОБУЧ_ИД" 
WHERE
	Н_ЛЮДИ."ИД" < 100865
	AND Н_ОБУЧЕНИЯ."ЧЛВК_ИД" = 163484
	AND Н_УЧЕНИКИ."НАЧАЛО" > '1996-09-01';

----------------------------------------------------------------------------------


--Вывести число студентов ФКТИУ, которые без ИНН.
--Ответ должен содержать только одно число.

SELECT COUNT(*)
FROM
	"Н_ОТДЕЛЫ"
JOIN "Н_ПЛАНЫ" ON
	Н_ПЛАНЫ."ОТД_ИД" = Н_ОТДЕЛЫ."ИД"
JOIN "Н_УЧЕНИКИ" ON
	Н_УЧЕНИКИ."ПЛАН_ИД" = Н_ПЛАНЫ."ИД"
JOIN "Н_ОБУЧЕНИЯ" ON
	Н_ОБУЧЕНИЯ."ЧЛВК_ИД"  = Н_УЧЕНИКИ."ЧЛВК_ИД" 
JOIN "Н_ЛЮДИ" ON
	Н_ЛЮДИ."ИД" = Н_ОБУЧЕНИЯ."ЧЛВК_ИД"
WHERE
	Н_ЛЮДИ.ИНН IS NULL
	AND Н_ОТДЕЛЫ."КОРОТКОЕ_ИМЯ" = 'КТиУ';

------------------------------------------------------

--В таблице Н_ГРУППЫ_ПЛАНОВ найти номера планов, по которым обучается (обучалось) более 2 групп на кафедре вычислительной техники.
--Для реализации использовать подзапрос.

SELECT DISTINCT  
	Н_ГРУППЫ_ПЛАНОВ."ПЛАН_ИД" 
FROM
	"Н_ПЛАНЫ"
JOIN "Н_ОТДЕЛЫ" ON Н_ПЛАНЫ."ОТД_ИД" = Н_ОТДЕЛЫ."ИД"
JOIN "Н_ГРУППЫ_ПЛАНОВ" ON Н_ГРУППЫ_ПЛАНОВ."ПЛАН_ИД" = Н_ПЛАНЫ."ИД" 
WHERE
	Н_ОТДЕЛЫ."ИМЯ_В_ИМИН_ПАДЕЖЕ"  = 'кафедра вычислительной техники'
	AND Н_ГРУППЫ_ПЛАНОВ."ГРУППА" IN (
	SELECT
		Н_ГРУППЫ_ПЛАНОВ."ГРУППА"
	FROM
		"Н_ГРУППЫ_ПЛАНОВ"
	JOIN "Н_ПЛАНЫ" ON
		Н_ГРУППЫ_ПЛАНОВ."ПЛАН_ИД" = Н_ПЛАНЫ."ИД"
	GROUP BY
		Н_ГРУППЫ_ПЛАНОВ."ГРУППА"
	HAVING
		COUNT(Н_ГРУППЫ_ПЛАНОВ."ГРУППА") > 2
);

---------------------------------------------------------------------

--Выведите таблицу со средним возрастом студентов во всех группах (Группа, Средний возраст), 
--где средний возраст меньше среднего возраста в группе 1101.

SELECT
	Н_УЧЕНИКИ."ГРУППА",
	avg(date_part('year', age("Н_ЛЮДИ"."ДАТА_РОЖДЕНИЯ")))
FROM
	Н_ЛЮДИ
JOIN "Н_ОБУЧЕНИЯ" ON
	Н_ЛЮДИ."ИД" = Н_ОБУЧЕНИЯ."ЧЛВК_ИД"
JOIN Н_УЧЕНИКИ ON
	Н_УЧЕНИКИ."ЧЛВК_ИД" = Н_ОБУЧЕНИЯ."ЧЛВК_ИД"
	AND Н_УЧЕНИКИ."ВИД_ОБУЧ_ИД" = Н_ОБУЧЕНИЯ."ВИД_ОБУЧ_ИД"
GROUP BY
	Н_УЧЕНИКИ."ГРУППА"
HAVING
	avg(date_part('year', age(Н_ЛЮДИ."ДАТА_РОЖДЕНИЯ"))) < (
	SELECT
		avg(date_part('year', age(Н_ЛЮДИ."ДАТА_РОЖДЕНИЯ")))
	FROM
		Н_ЛЮДИ
	JOIN "Н_ОБУЧЕНИЯ" ON
		Н_ЛЮДИ."ИД" = Н_ОБУЧЕНИЯ."ЧЛВК_ИД"
	JOIN Н_УЧЕНИКИ ON
		Н_УЧЕНИКИ."ЧЛВК_ИД" = Н_ОБУЧЕНИЯ."ЧЛВК_ИД"
		AND Н_УЧЕНИКИ."ВИД_ОБУЧ_ИД" = Н_ОБУЧЕНИЯ."ВИД_ОБУЧ_ИД"
	WHERE
		Н_УЧЕНИКИ."ГРУППА" = '1101');

---------------------------------------------------------------------


-- Получить список студентов, зачисленных после первого сентября 2012 года на первый курс очной формы обучения (специальность: 230101). 
--В результат включить:
--номер группы;
--номер, фамилию, имя и отчество студента;
--номер и состояние пункта приказа;
--Для реализации использовать подзапрос с IN.

-- В запросе слишком ранняя дата
	
SELECT
	Н_УЧЕНИКИ."ГРУППА",
	Н_ЛЮДИ."ИД" AS "НОМЕР",
	Н_ЛЮДИ."ФАМИЛИЯ",
	Н_ЛЮДИ."ИМЯ",
	Н_ЛЮДИ."ОТЧЕСТВО",
	Н_УЧЕНИКИ."П_ПРКОК_ИД" AS "НОМЕР ПРИКАЗА",
	Н_УЧЕНИКИ."СОСТОЯНИЕ" AS "СОСТОЯНИЕ ПУНКТА ПРИКАЗА" 
FROM
	Н_УЧЕНИКИ
JOIN "Н_ОБУЧЕНИЯ" ON 
	Н_ОБУЧЕНИЯ."ЧЛВК_ИД" = Н_УЧЕНИКИ."ЧЛВК_ИД" 
	AND Н_ОБУЧЕНИЯ."ВИД_ОБУЧ_ИД" = Н_УЧЕНИКИ."ВИД_ОБУЧ_ИД" 
JOIN Н_ЛЮДИ ON
	Н_ЛЮДИ."ИД" = Н_ОБУЧЕНИЯ."ЧЛВК_ИД" 
WHERE
	DATE("НАЧАЛО") > '2012-09-01'
	AND Н_УЧЕНИКИ."ПЛАН_ИД" IN (
	SELECT
		Н_ПЛАНЫ."ИД"
	FROM
		Н_ПЛАНЫ
	WHERE
		Н_ПЛАНЫ."КУРС" = 1
		AND Н_ПЛАНЫ."НАПС_ИД" IN (
		SELECT
			Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ."ИД"
		FROM
			Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ
		WHERE
			Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ."НС_ИД" IN (
			SELECT
				Н_НАПР_СПЕЦ."ИД"
			FROM
				Н_НАПР_СПЕЦ
			WHERE
				Н_НАПР_СПЕЦ."КОД_НАПРСПЕЦ" = '230101'))
		AND Н_ПЛАНЫ."ФО_ИД" IN (
		SELECT
			Н_ФОРМЫ_ОБУЧЕНИЯ."ИД"
		FROM
			Н_ФОРМЫ_ОБУЧЕНИЯ
		WHERE
			Н_ФОРМЫ_ОБУЧЕНИЯ."НАИМЕНОВАНИЕ" = 'Очная'
    )
);


-- Вывести список людей, не являющихся или не являвшихся студентами СПбГУ ИТМО (данные, о которых отсутствуют в таблице Н_УЧЕНИКИ). 
-- В запросе нельзя использовать DISTINCT.

SELECT Н_ЛЮДИ."ИД",
       Н_ЛЮДИ."ФАМИЛИЯ",
       Н_ЛЮДИ."ИМЯ",
       Н_ЛЮДИ."ОТЧЕСТВО"
FROM Н_ЛЮДИ
JOIN "Н_ОБУЧЕНИЯ" ON Н_ОБУЧЕНИЯ."ЧЛВК_ИД" = Н_ЛЮДИ."ИД" 
WHERE NOT EXISTS (
	SELECT
		1
	FROM
		Н_УЧЕНИКИ
	JOIN Н_ПЛАНЫ
	ON Н_ПЛАНЫ."ИД" = Н_УЧЕНИКИ."ПЛАН_ИД"
	JOIN Н_ОТДЕЛЫ
	ON Н_ОТДЕЛЫ."ИД" = Н_ПЛАНЫ."ОТД_ИД" 
		AND Н_ОТДЕЛЫ."КОРОТКОЕ_ИМЯ" = 'СПбГУИТМО'
	WHERE Н_УЧЕНИКИ."ЧЛВК_ИД" = Н_ОБУЧЕНИЯ."ЧЛВК_ИД" 
		AND Н_УЧЕНИКИ."ВИД_ОБУЧ_ИД" = Н_ОБУЧЕНИЯ."ВИД_ОБУЧ_ИД" 
);


















